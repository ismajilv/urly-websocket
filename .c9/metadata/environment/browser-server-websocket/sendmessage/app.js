{"changed":true,"filter":false,"title":"app.js","tooltip":"/browser-server-websocket/sendmessage/app.js","value":"// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: MIT-0\n\nconst AWS = require('aws-sdk');\n\nconst ddb = new AWS.DynamoDB.DocumentClient({ apiVersion: '2012-08-10' });\n\nconst { TABLE_NAME } = process.env;\n\nexports.handler = async (event, context) => {\n  let connectionData;\n  \n  try {\n    connectionData = await ddb.scan({ TableName: TABLE_NAME, ProjectionExpression: 'browserId' }).promise();\n  } catch (e) {\n    return { statusCode: 500, body: e.stack };\n  }\n  \n  const apigwManagementApi = new AWS.ApiGatewayManagementApi({\n    apiVersion: '2018-11-29',\n    endpoint: event.requestContext.domainName + '/' + event.requestContext.stage\n  });\n  \n  const postData = JSON.parse(event.body).data;\n  \n  const postCalls = connectionData.Items.map(async ({ browserId }) => {\n    try {\n      await apigwManagementApi.postToConnection({ ConnectionId: browserId, Data: postData }).promise();\n    } catch (e) {\n      if (e.statusCode === 410) {\n        console.log(`Found stale connection, deleting ${browserId}`);\n        await ddb.delete({ TableName: TABLE_NAME, Key: { browserId } }).promise();\n      } else {\n        throw e;\n      }\n    }\n  });\n  \n  try {\n    await Promise.all(postCalls);\n  } catch (e) {\n    return { statusCode: 500, body: e.stack };\n  }\n\n  return { statusCode: 200, body: 'Data sent.' };\n};\n","undoManager":{"mark":7,"position":7,"stack":[[{"start":{"row":13,"column":84},"end":{"row":13,"column":96},"action":"remove","lines":["connectionId"],"id":2},{"start":{"row":13,"column":84},"end":{"row":13,"column":85},"action":"insert","lines":["b"]},{"start":{"row":13,"column":85},"end":{"row":13,"column":86},"action":"insert","lines":["r"]},{"start":{"row":13,"column":86},"end":{"row":13,"column":87},"action":"insert","lines":["o"]},{"start":{"row":13,"column":87},"end":{"row":13,"column":88},"action":"insert","lines":["w"]}],[{"start":{"row":13,"column":88},"end":{"row":13,"column":89},"action":"insert","lines":["s"],"id":3},{"start":{"row":13,"column":89},"end":{"row":13,"column":90},"action":"insert","lines":["e"]},{"start":{"row":13,"column":90},"end":{"row":13,"column":91},"action":"insert","lines":["r"]}],[{"start":{"row":13,"column":84},"end":{"row":13,"column":91},"action":"remove","lines":["browser"],"id":4},{"start":{"row":13,"column":84},"end":{"row":13,"column":93},"action":"insert","lines":["browserId"]}],[{"start":{"row":25,"column":54},"end":{"row":25,"column":66},"action":"remove","lines":["connectionId"],"id":5},{"start":{"row":25,"column":54},"end":{"row":25,"column":55},"action":"insert","lines":["b"]},{"start":{"row":25,"column":55},"end":{"row":25,"column":56},"action":"insert","lines":["r"]}],[{"start":{"row":25,"column":54},"end":{"row":25,"column":56},"action":"remove","lines":["br"],"id":6},{"start":{"row":25,"column":54},"end":{"row":25,"column":63},"action":"insert","lines":["browserId"]}],[{"start":{"row":27,"column":64},"end":{"row":27,"column":76},"action":"remove","lines":["connectionId"],"id":7},{"start":{"row":27,"column":64},"end":{"row":27,"column":73},"action":"insert","lines":["browserId"]}],[{"start":{"row":30,"column":56},"end":{"row":30,"column":68},"action":"remove","lines":["connectionId"],"id":8},{"start":{"row":30,"column":56},"end":{"row":30,"column":65},"action":"insert","lines":["browserId"]}],[{"start":{"row":31,"column":57},"end":{"row":31,"column":69},"action":"remove","lines":["connectionId"],"id":9},{"start":{"row":31,"column":57},"end":{"row":31,"column":66},"action":"insert","lines":["browserId"]}],[{"start":{"row":0,"column":0},"end":{"row":46,"column":0},"action":"remove","lines":["// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.","// SPDX-License-Identifier: MIT-0","","const AWS = require('aws-sdk');","","const ddb = new AWS.DynamoDB.DocumentClient({ apiVersion: '2012-08-10' });","","const { TABLE_NAME } = process.env;","","exports.handler = async (event, context) => {","  let connectionData;","  ","  try {","    connectionData = await ddb.scan({ TableName: TABLE_NAME, ProjectionExpression: 'browserId' }).promise();","  } catch (e) {","    return { statusCode: 500, body: e.stack };","  }","  ","  const apigwManagementApi = new AWS.ApiGatewayManagementApi({","    apiVersion: '2018-11-29',","    endpoint: event.requestContext.domainName + '/' + event.requestContext.stage","  });","  ","  const postData = JSON.parse(event.body).data;","  ","  const postCalls = connectionData.Items.map(async ({ browserId }) => {","    try {","      await apigwManagementApi.postToConnection({ ConnectionId: browserId, Data: postData }).promise();","    } catch (e) {","      if (e.statusCode === 410) {","        console.log(`Found stale connection, deleting ${browserId}`);","        await ddb.delete({ TableName: TABLE_NAME, Key: { browserId } }).promise();","      } else {","        throw e;","      }","    }","  });","  ","  try {","    await Promise.all(postCalls);","  } catch (e) {","    return { statusCode: 500, body: e.stack };","  }","","  return { statusCode: 200, body: 'Data sent.' };","};",""],"id":10},{"start":{"row":0,"column":0},"end":{"row":55,"column":0},"action":"insert","lines":["// Copyright 2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.","// SPDX-License-Identifier: MIT-0","","const AWS = require('aws-sdk');","","const ddb = new AWS.DynamoDB.DocumentClient({ apiVersion: '2012-08-10' });","","const { TABLE_NAME } = process.env;","","exports.handler = async (event, context) => {","  const connectionId = event.requestContext.connectionId;","  // console.log(TABLE_NAME, typeof(connectionId))","  ","  // var params = {","  //   AttributesToGet: [","  //     \"simpleBrowserId\"","  //   ],","  //   TableName : TABLE_NAME,","  //   Key : { ","  //     \"browserId\" : {","  //       \"S\" : connectionId","  //     }","  //   }","  // }","  console.log(\"1\")","  try {","    var browserData = await ddb.scan({ TableName: TABLE_NAME, ProjectionExpression: 'browserId' }).promise();","  } catch (e) {","    return { statusCode: 500, body: e.stack };","  }","  console.log(browserData);","  // var params = {","  //   TableName: TABLE_NAME,","  //   Key: {","  //     browserId: {S: connectionId}","  //   },","  //   ProjectionExpression: 'simpleBrowserId'","  // };","","  console.log(\"2\")","  const apigwManagementApi = new AWS.ApiGatewayManagementApi({","    apiVersion: '2018-11-29',","    endpoint: event.requestContext.domainName + '/' + event.requestContext.stage","  });","  console.log(\"3\")","  const postData = {connectionId: connectionId};","  ","  try {","    await apigwManagementApi.postToConnection({ ConnectionId: connectionId, Data: JSON.stringify(postData) }).promise();","  } catch (e) {","    return { statusCode: 500, body: e.stack };","  }","  ","  return { statusCode: 200, body: 'Data sent.' };","};",""]}]]},"ace":{"folds":[],"scrolltop":180,"scrollleft":0,"selection":{"start":{"row":24,"column":2},"end":{"row":24,"column":2},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1558526544556}