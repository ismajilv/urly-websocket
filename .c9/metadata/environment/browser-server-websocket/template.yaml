{"filter":false,"title":"template.yaml","tooltip":"/browser-server-websocket/template.yaml","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":0,"column":0},"end":{"row":208,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  browser-server-websocket","","  SAM Template for browser-server-websocket that has the DynamoDB table and Lambda","  functions needed to demonstrate the Websocket protocol on API Gateway.","","Parameters:","  TableName:","    Type: String","    Default: 'browser_server_client_websocket'","    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters","    MinLength: 3","    MaxLength: 50","    AllowedPattern: ^[A-Za-z_]+$","    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'","","Resources:","  Bro:","    Type: AWS::ApiGatewayV2::Api","    Properties:","      Name: Bro","      ProtocolType: WEBSOCKET","      RouteSelectionExpression: \"$request.body.message\"","  ConnectRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref Bro","      RouteKey: $connect","      AuthorizationType: NONE","      OperationName: ConnectRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref ConnectInteg","  ConnectInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref Bro","      Description: Connect Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations","  DisconnectRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref Bro","      RouteKey: $disconnect","      AuthorizationType: NONE","      OperationName: DisconnectRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref DisconnectInteg","  DisconnectInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref Bro","      Description: Disconnect Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations","  SendRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref Bro","      RouteKey: sendmessage","      AuthorizationType: NONE","      OperationName: SendRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref SendInteg","  SendInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref Bro","      Description: Send Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations","  Deployment:","    Type: AWS::ApiGatewayV2::Deployment","    DependsOn:","    - ConnectRoute","    - SendRoute","    - DisconnectRoute","    Properties:","      ApiId: !Ref Bro","  Stage:","    Type: AWS::ApiGatewayV2::Stage","    Properties:","      StageName: Prod","      Description: Prod Stage","      DeploymentId: !Ref Deployment","      ApiId: !Ref Bro","  ConnectionsTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","      - AttributeName: \"connectionId\"","        AttributeType: \"S\"","      KeySchema:","      - AttributeName: \"connectionId\"","        KeyType: \"HASH\"","      ProvisionedThroughput:","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","      SSESpecification:","        SSEEnabled: True","      TableName: !Ref TableName","  OnConnectFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: onconnect/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","  OnConnectPermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - Bro","      - OnConnectFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref OnConnectFunction","      Principal: apigateway.amazonaws.com","  OnDisconnectFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: ondisconnect/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","  OnDisconnectPermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - Bro","      - OnDisconnectFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref OnDisconnectFunction","      Principal: apigateway.amazonaws.com","  SendMessageFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: sendmessage/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","      - Statement:","        - Effect: Allow","          Action:","          - 'execute-api:ManageConnections'","          Resource:","          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${Bro}/*'","  SendMessagePermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - Bro","      - SendMessageFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref SendMessageFunction","      Principal: apigateway.amazonaws.com","","Outputs:","  ConnectionsTableArn:","    Description: \"Connections table ARN\"","    Value: !GetAtt ConnectionsTable.Arn","","  OnConnectFunctionArn:","    Description: \"OnConnect function ARN\"","    Value: !GetAtt OnConnectFunction.Arn","","  OnDisconnectFunctionArn:","    Description: \"OnDisconnect function ARN\"","    Value: !GetAtt OnDisconnectFunction.Arn","","  SendMessageFunctionArn:","    Description: \"SendMessage function ARN\"","    Value: !GetAtt SendMessageFunction.Arn","","  WebSocketURI:","    Description: \"The WSS Protocol URI to connect to\"","    Value: !Join [ '', [ 'wss://', !Ref Bro, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":219,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  simple-websockets-chat-app","  SAM Template for simple-websockets-chat-app that has the DynamoDB table and Lambda","  functions needed to demonstrate the Websocket protocol on API Gateway.","Parameters:","  TableName:","    Type: String","    Default: 'simplechat_connections'","    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters","    MinLength: 3","    MaxLength: 50","    AllowedPattern: ^[A-Za-z_]+$","    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'","","Resources:","  SimpleChatWebSocket:","    Type: AWS::ApiGatewayV2::Api","    Properties:","      Name: SimpleChatWebSocket","      ProtocolType: WEBSOCKET","      RouteSelectionExpression: \"$request.body.message\"","  ConnectRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      RouteKey: $connect","      AuthorizationType: NONE","      OperationName: ConnectRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref ConnectInteg","  ConnectInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      Description: Connect Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations","  DisconnectRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      RouteKey: $disconnect","      AuthorizationType: NONE","      OperationName: DisconnectRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref DisconnectInteg","  DisconnectInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      Description: Disconnect Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations","  SendRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      RouteKey: sendmessage","      AuthorizationType: NONE","      OperationName: SendRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref SendInteg","  SendInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      Description: Send Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations","  Deployment:","    Type: AWS::ApiGatewayV2::Deployment","    DependsOn:","    - ConnectRoute","    - SendRoute","    - DisconnectRoute","    Properties:","      ApiId: !Ref SimpleChatWebSocket","  Stage:","    Type: AWS::ApiGatewayV2::Stage","    Properties:","      StageName: Prod","      Description: Prod Stage","      DeploymentId: !Ref Deployment","      ApiId: !Ref SimpleChatWebSocket","  ConnectionsTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","      - AttributeName: \"connectionId\"","        AttributeType: \"S\"","      KeySchema:","      - AttributeName: \"connectionId\"","        KeyType: \"HASH\"","      ProvisionedThroughput:","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","      SSESpecification:","        SSEEnabled: True","      TableName: !Ref TableName","  OnConnectFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: onconnect/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","  OnConnectPermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - SimpleChatWebSocket","      - OnConnectFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref OnConnectFunction","      Principal: apigateway.amazonaws.com","  OnDisconnectFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: ondisconnect/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","  OnDisconnectPermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - SimpleChatWebSocket","      - OnDisconnectFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref OnDisconnectFunction","      Principal: apigateway.amazonaws.com","  SendMessageFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: sendmessage/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","      - Statement:","        - Effect: Allow","          Action:","          - 'execute-api:ManageConnections'","          Resource:","          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SimpleChatWebSocket}/*'","  SendMessagePermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - SimpleChatWebSocket","      - SendMessageFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref SendMessageFunction","      Principal: apigateway.amazonaws.com","","Outputs:","  ConnectionsTableArn:","    Description: \"Connections table ARN\"","    Value: !GetAtt ConnectionsTable.Arn","","  OnConnectFunctionArn:","    Description: \"OnConnect function ARN\"","    Value: !GetAtt OnConnectFunction.Arn","","  OnDisconnectFunctionArn:","    Description: \"OnDisconnect function ARN\"","    Value: !GetAtt OnDisconnectFunction.Arn","","  SendMessageFunctionArn:","    Description: \"SendMessage function ARN\"","    Value: !GetAtt SendMessageFunction.Arn","","  WebSocketURI:","    Description: \"The WSS Protocol URI to connect to\"","    Value: !Join [ '', [ 'wss://', !Ref SimpleChatWebSocket, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]","","    © 2019 GitHub, Inc.","    Terms","    Privacy","    Security","    Status","    Help","","Contact GitHub","Pricing","API","Training","Blog",""]}],[{"start":{"row":207,"column":0},"end":{"row":219,"column":0},"action":"remove","lines":["    © 2019 GitHub, Inc.","    Terms","    Privacy","    Security","    Status","    Help","","Contact GitHub","Pricing","API","Training","Blog",""],"id":3},{"start":{"row":206,"column":0},"end":{"row":207,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":3,"column":2},"end":{"row":3,"column":28},"action":"remove","lines":["simple-websockets-chat-app"],"id":4},{"start":{"row":3,"column":2},"end":{"row":3,"column":26},"action":"insert","lines":["browser-server-websocket"]},{"start":{"row":4,"column":19},"end":{"row":4,"column":45},"action":"remove","lines":["simple-websockets-chat-app"]},{"start":{"row":4,"column":19},"end":{"row":4,"column":43},"action":"insert","lines":["browser-server-websocket"]}],[{"start":{"row":9,"column":14},"end":{"row":9,"column":36},"action":"remove","lines":["simplechat_connections"],"id":5},{"start":{"row":9,"column":14},"end":{"row":9,"column":45},"action":"insert","lines":["browser-server-client_websocket"]}],[{"start":{"row":0,"column":0},"end":{"row":206,"column":0},"action":"remove","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  browser-server-websocket","  SAM Template for browser-server-websocket that has the DynamoDB table and Lambda","  functions needed to demonstrate the Websocket protocol on API Gateway.","Parameters:","  TableName:","    Type: String","    Default: 'browser-server-client_websocket'","    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters","    MinLength: 3","    MaxLength: 50","    AllowedPattern: ^[A-Za-z_]+$","    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'","","Resources:","  SimpleChatWebSocket:","    Type: AWS::ApiGatewayV2::Api","    Properties:","      Name: SimpleChatWebSocket","      ProtocolType: WEBSOCKET","      RouteSelectionExpression: \"$request.body.message\"","  ConnectRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      RouteKey: $connect","      AuthorizationType: NONE","      OperationName: ConnectRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref ConnectInteg","  ConnectInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      Description: Connect Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations","  DisconnectRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      RouteKey: $disconnect","      AuthorizationType: NONE","      OperationName: DisconnectRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref DisconnectInteg","  DisconnectInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      Description: Disconnect Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations","  SendRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      RouteKey: sendmessage","      AuthorizationType: NONE","      OperationName: SendRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref SendInteg","  SendInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref SimpleChatWebSocket","      Description: Send Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations","  Deployment:","    Type: AWS::ApiGatewayV2::Deployment","    DependsOn:","    - ConnectRoute","    - SendRoute","    - DisconnectRoute","    Properties:","      ApiId: !Ref SimpleChatWebSocket","  Stage:","    Type: AWS::ApiGatewayV2::Stage","    Properties:","      StageName: Prod","      Description: Prod Stage","      DeploymentId: !Ref Deployment","      ApiId: !Ref SimpleChatWebSocket","  ConnectionsTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","      - AttributeName: \"connectionId\"","        AttributeType: \"S\"","      KeySchema:","      - AttributeName: \"connectionId\"","        KeyType: \"HASH\"","      ProvisionedThroughput:","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","      SSESpecification:","        SSEEnabled: True","      TableName: !Ref TableName","  OnConnectFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: onconnect/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","  OnConnectPermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - SimpleChatWebSocket","      - OnConnectFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref OnConnectFunction","      Principal: apigateway.amazonaws.com","  OnDisconnectFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: ondisconnect/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","  OnDisconnectPermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - SimpleChatWebSocket","      - OnDisconnectFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref OnDisconnectFunction","      Principal: apigateway.amazonaws.com","  SendMessageFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: sendmessage/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","      - Statement:","        - Effect: Allow","          Action:","          - 'execute-api:ManageConnections'","          Resource:","          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${SimpleChatWebSocket}/*'","  SendMessagePermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - SimpleChatWebSocket","      - SendMessageFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref SendMessageFunction","      Principal: apigateway.amazonaws.com","","Outputs:","  ConnectionsTableArn:","    Description: \"Connections table ARN\"","    Value: !GetAtt ConnectionsTable.Arn","","  OnConnectFunctionArn:","    Description: \"OnConnect function ARN\"","    Value: !GetAtt OnConnectFunction.Arn","","  OnDisconnectFunctionArn:","    Description: \"OnDisconnect function ARN\"","    Value: !GetAtt OnDisconnectFunction.Arn","","  SendMessageFunctionArn:","    Description: \"SendMessage function ARN\"","    Value: !GetAtt SendMessageFunction.Arn","","  WebSocketURI:","    Description: \"The WSS Protocol URI to connect to\"","    Value: !Join [ '', [ 'wss://', !Ref SimpleChatWebSocket, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]",""],"id":7},{"start":{"row":0,"column":0},"end":{"row":206,"column":0},"action":"insert","lines":["AWSTemplateFormatVersion: '2010-09-09'","Transform: AWS::Serverless-2016-10-31","Description: >","  browser-server-websocket","  SAM Template for browser-server-websocket that has the DynamoDB table and Lambda","  functions needed to demonstrate the Websocket protocol on API Gateway.","Parameters:","  TableName:","    Type: String","    Default: 'browser-server-client_websocket'","    Description: (Required) The name of the new DynamoDB to store connection identifiers for each connected clients. Minimum 3 characters","    MinLength: 3","    MaxLength: 50","    AllowedPattern: ^[A-Za-z_]+$","    ConstraintDescription: 'Required. Can be characters and underscore only. No numbers or special characters allowed.'","","Resources:","  BrowserServerWebSocket:","    Type: AWS::ApiGatewayV2::Api","    Properties:","      Name: BrowserServerWebSocket","      ProtocolType: WEBSOCKET","      RouteSelectionExpression: \"$request.body.message\"","  ConnectRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref BrowserServerWebSocket","      RouteKey: $connect","      AuthorizationType: NONE","      OperationName: ConnectRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref ConnectInteg","  ConnectInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref BrowserServerWebSocket","      Description: Connect Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnConnectFunction.Arn}/invocations","  DisconnectRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref BrowserServerWebSocket","      RouteKey: $disconnect","      AuthorizationType: NONE","      OperationName: DisconnectRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref DisconnectInteg","  DisconnectInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref BrowserServerWebSocket","      Description: Disconnect Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${OnDisconnectFunction.Arn}/invocations","  SendRoute:","    Type: AWS::ApiGatewayV2::Route","    Properties:","      ApiId: !Ref BrowserServerWebSocket","      RouteKey: sendmessage","      AuthorizationType: NONE","      OperationName: SendRoute","      Target: !Join","        - '/'","        - - 'integrations'","          - !Ref SendInteg","  SendInteg:","    Type: AWS::ApiGatewayV2::Integration","    Properties:","      ApiId: !Ref BrowserServerWebSocket","      Description: Send Integration","      IntegrationType: AWS_PROXY","      IntegrationUri: ","        Fn::Sub:","            arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SendMessageFunction.Arn}/invocations","  Deployment:","    Type: AWS::ApiGatewayV2::Deployment","    DependsOn:","    - ConnectRoute","    - SendRoute","    - DisconnectRoute","    Properties:","      ApiId: !Ref BrowserServerWebSocket","  Stage:","    Type: AWS::ApiGatewayV2::Stage","    Properties:","      StageName: Prod","      Description: Prod Stage","      DeploymentId: !Ref Deployment","      ApiId: !Ref BrowserServerWebSocket","  ConnectionsTable:","    Type: AWS::DynamoDB::Table","    Properties:","      AttributeDefinitions:","      - AttributeName: \"browserId\"","        AttributeType: \"S\"","      KeySchema:","      - AttributeName: \"browserId\"","        KeyType: \"HASH\"","      ProvisionedThroughput:","        ReadCapacityUnits: 5","        WriteCapacityUnits: 5","      SSESpecification:","        SSEEnabled: True","      TableName: !Ref TableName","  OnConnectFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: onconnect/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","  OnConnectPermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - BrowserServerWebSocket","      - OnConnectFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref OnConnectFunction","      Principal: apigateway.amazonaws.com","  OnDisconnectFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: ondisconnect/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","  OnDisconnectPermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - BrowserServerWebSocket","      - OnDisconnectFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref OnDisconnectFunction","      Principal: apigateway.amazonaws.com","  SendMessageFunction:","    Type: AWS::Serverless::Function","    Properties:","      CodeUri: sendmessage/","      Handler: app.handler","      MemorySize: 256","      Runtime: nodejs10.x","      Environment:","        Variables:","          TABLE_NAME: !Ref TableName","      Policies:","      - DynamoDBCrudPolicy:","          TableName: !Ref TableName","      - Statement:","        - Effect: Allow","          Action:","          - 'execute-api:ManageConnections'","          Resource:","          - !Sub 'arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${BrowserServerWebSocket}/*'","  SendMessagePermission:","    Type: AWS::Lambda::Permission","    DependsOn:","      - BrowserServerWebSocket","      - SendMessageFunction","    Properties:","      Action: lambda:InvokeFunction","      FunctionName: !Ref SendMessageFunction","      Principal: apigateway.amazonaws.com","","Outputs:","  ConnectionsTableArn:","    Description: \"Connections table ARN\"","    Value: !GetAtt ConnectionsTable.Arn","","  OnConnectFunctionArn:","    Description: \"OnConnect function ARN\"","    Value: !GetAtt OnConnectFunction.Arn","","  OnDisconnectFunctionArn:","    Description: \"OnDisconnect function ARN\"","    Value: !GetAtt OnDisconnectFunction.Arn","","  SendMessageFunctionArn:","    Description: \"SendMessage function ARN\"","    Value: !GetAtt SendMessageFunction.Arn","","  WebSocketURI:","    Description: \"The WSS Protocol URI to connect to\"","    Value: !Join [ '', [ 'wss://', !Ref BrowserServerWebSocket, '.execute-api.',!Ref 'AWS::Region','.amazonaws.com/',!Ref 'Stage'] ]",""]}],[{"start":{"row":9,"column":21},"end":{"row":9,"column":22},"action":"remove","lines":["-"],"id":8}],[{"start":{"row":9,"column":21},"end":{"row":9,"column":22},"action":"insert","lines":["_"],"id":9}],[{"start":{"row":9,"column":28},"end":{"row":9,"column":29},"action":"remove","lines":["-"],"id":10}],[{"start":{"row":9,"column":28},"end":{"row":9,"column":29},"action":"insert","lines":["_"],"id":11}]]},"ace":{"folds":[],"scrolltop":1226.5,"scrollleft":0,"selection":{"start":{"row":101,"column":27},"end":{"row":101,"column":27},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":93,"state":"start","mode":"ace/mode/yaml"}},"timestamp":1558464878191,"hash":"b0c02b31b643d7ba308871263225f9cda9b24c75"}